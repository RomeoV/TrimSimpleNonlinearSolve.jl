!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Julia	Y,unknown	/name defined in other modules/
!_TAG_KIND_DESCRIPTION!Julia	c,constant	/Constants/
!_TAG_KIND_DESCRIPTION!Julia	f,function	/Functions/
!_TAG_KIND_DESCRIPTION!Julia	g,field	/Fields/
!_TAG_KIND_DESCRIPTION!Julia	m,macro	/Macros/
!_TAG_KIND_DESCRIPTION!Julia	n,module	/Modules/
!_TAG_KIND_DESCRIPTION!Julia	s,struct	/Structures/
!_TAG_KIND_DESCRIPTION!Julia	t,type	/Types/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	1.1	/current.age/
!_TAG_PARSER_VERSION!Julia	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/romeo/.julia/dev/PolyesterWeave/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.2.0	/v6.2.0/
!_TAG_ROLE_DESCRIPTION!Julia!module	imported	/loaded by "import"/
!_TAG_ROLE_DESCRIPTION!Julia!module	namespace	/only some symbols in it are imported/
!_TAG_ROLE_DESCRIPTION!Julia!module	used	/loaded by "using"/
!_TAG_ROLE_DESCRIPTION!Julia!unknown	imported	/loaded by "import"/
!_TAG_ROLE_DESCRIPTION!Julia!unknown	used	/loaded by "using"/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
IteratorEltype	src/unsignediterator.jl	/^Base.IteratorEltype(::Type{<:UnsignedIteratorEarlyStop}) = Base.HasEltype()$/;"	f	module:Base
IteratorEltype	src/unsignediterator.jl	/^Base.IteratorEltype(::Type{<:UnsignedIterator}) = Base.HasEltype()$/;"	f	module:Base
IteratorSize	src/unsignediterator.jl	/^Base.IteratorSize(::Type{<:UnsignedIteratorEarlyStop}) = Base.HasShape{1}()$/;"	f	module:Base
IteratorSize	src/unsignediterator.jl	/^Base.IteratorSize(::Type{<:UnsignedIterator}) = Base.HasShape{1}()$/;"	f	module:Base
PolyesterWeave	README.md	/^# PolyesterWeave$/;"	c
PolyesterWeave	docs/src/index.md	/^# PolyesterWeave$/;"	c
PolyesterWeave	src/PolyesterWeave.jl	/^module PolyesterWeave$/;"	n
UnsignedIterator	src/unsignediterator.jl	/^struct UnsignedIterator{U}$/;"	s
UnsignedIteratorEarlyStop	src/unsignediterator.jl	/^UnsignedIteratorEarlyStop(u) =$/;"	f
UnsignedIteratorEarlyStop	src/unsignediterator.jl	/^UnsignedIteratorEarlyStop(u, i) = UnsignedIteratorEarlyStop(u, i % UInt32)$/;"	f
UnsignedIteratorEarlyStop	src/unsignediterator.jl	/^struct UnsignedIteratorEarlyStop{U}$/;"	s
WORKERS	src/PolyesterWeave.jl	/^const WORKERS = Ref{NTuple{8,UInt64}}(ntuple(((zero âˆ˜ UInt64)), Val(8)))$/;"	c	module:PolyesterWeave
__init__	src/PolyesterWeave.jl	/^__init__() = reset_workers!()$/;"	f	module:PolyesterWeave
__request_threads	src/request.jl	/^@inline function __request_threads(num_requested::UInt32, wp::Ptr, threadmask)$/;"	f
_exchange_mask!	src/request.jl	/^@inline function _exchange_mask!(wp, ::Nothing)$/;"	f
_exchange_mask!	src/request.jl	/^@inline function _exchange_mask!(wp, threadmask::Unsigned)$/;"	f
_first	src/request.jl	/^@inline _first(::Tuple{}) = nothing$/;"	f
_first	src/request.jl	/^@inline _first(x::Tuple{X,Vararg}) where {X<:Unsigned} = getfield(x, 1)$/;"	f
_first	src/request.jl	/^@inline _first(x::Union{Unsigned,Nothing}) = x$/;"	f
_remaining	src/request.jl	/^@inline _remaining(@nospecialize(x)) = nothing$/;"	f
_remaining	src/request.jl	/^@inline _remaining(x::Tuple) = Base.tail(x)$/;"	f
_request_threads	src/request.jl	/^@inline function _request_threads($/;"	f
assume	src/PolyesterWeave.jl	/^  @inline assume(b::Bool) = Base.llvmcall($/;"	f	module:PolyesterWeave
assume	src/PolyesterWeave.jl	/^  @inline function assume(b::Bool)$/;"	f	module:PolyesterWeave
disable_polyester_threads	src/utility.jl	/^function disable_polyester_threads(f::F) where {F}$/;"	f
dynamic_thread_count	src/PolyesterWeave.jl	/^dynamic_thread_count() = min((Sys.CPU_THREADS)::Int, Threads.nthreads())$/;"	f	module:PolyesterWeave
eltype	src/unsignediterator.jl	/^Base.eltype(::UnsignedIterator) = UInt32$/;"	f	module:Base
eltype	src/unsignediterator.jl	/^Base.eltype(::UnsignedIteratorEarlyStop) = Tuple{UInt32,UInt32}$/;"	f	module:Base
free_threads!	src/request.jl	/^function free_threads!($/;"	f
free_threads!	src/request.jl	/^function free_threads!(freed_threads::U) where {U<:Unsigned}$/;"	f
free_threads!	src/request.jl	/^function free_threads!(freed_threads_tuple::NTuple{1,U}) where {U<:Unsigned}$/;"	f
i	src/unsignediterator.jl	/^  i::UInt32$/;"	g	struct:UnsignedIteratorEarlyStop
initial_state	src/unsignediterator.jl	/^@inline function initial_state(u::UnsignedIteratorEarlyStop)$/;"	f
iter	src/unsignediterator.jl	/^@inline function iter(i, uu)$/;"	f
iterate	src/unsignediterator.jl	/^@inline function Base.iterate($/;"	f	module:Base
iterate	src/unsignediterator.jl	/^@inline function Base.iterate(u::UnsignedIterator, (i, uu) = (0x00000000, u.u))$/;"	f	module:Base
length	src/unsignediterator.jl	/^Base.length(u::UnsignedIterator) = count_ones(u.u)$/;"	f	module:Base
length	src/unsignediterator.jl	/^Base.length(u::UnsignedIteratorEarlyStop) = getfield(u, :i)$/;"	f	module:Base
mask	src/unsignediterator.jl	/^mask(u::UnsignedIteratorEarlyStop) = getfield(u, :u)$/;"	f
request_threads	src/request.jl	/^@inline function request_threads(num_requested, threadmask)$/;"	f
request_threads	src/request.jl	/^@inline request_threads(num_requested) = request_threads(num_requested, nothing)$/;"	f
request_threads	src/request.jl	/^function request_threads end$/;"	f
reset_workers!	src/PolyesterWeave.jl	/^function reset_workers!()$/;"	f	module:PolyesterWeave
show	src/unsignediterator.jl	/^function Base.show(io::IO, u::UnsignedIteratorEarlyStop)$/;"	f	module:Base
size	src/unsignediterator.jl	/^Base.size(u::UnsignedIterator) = (count_ones(u.u),)$/;"	f	module:Base
size	src/unsignediterator.jl	/^Base.size(u::UnsignedIteratorEarlyStop) = (getfield(u, :i),)$/;"	f	module:Base
u	src/unsignediterator.jl	/^  u::U$/;"	g	struct:UnsignedIterator
u	src/unsignediterator.jl	/^  u::U$/;"	g	struct:UnsignedIteratorEarlyStop
worker_bits	src/request.jl	/^function worker_bits()$/;"	f
worker_mask_count	src/request.jl	/^function worker_mask_count()$/;"	f
worker_mask_init	src/PolyesterWeave.jl	/^worker_mask_init(x) = if x < 0$/;"	f	module:PolyesterWeave
worker_pointer	src/request.jl	/^worker_pointer() = Base.unsafe_convert(Ptr{UInt}, pointer_from_objref(WORKERS))$/;"	f
